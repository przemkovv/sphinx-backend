#%RAML 1.0
---
title: Sphinx Backend REST API
baseUri: http://localhost:9998/{version}
version: v1
mediaType: application/json
protocols: [HTTP]

types:
  User: !include schema/user.json
  Users:
    type: array
    items: User
    minItems: 1
    uniqueItems: true
  Solution: !include schema/solution.json
  Solutions:
    type: array
    items: Solution
    minItems: 1
    uniqueItems: true
  Course: !include schema/course.json
  Courses: 
    type: array
    items: Course
    minItems: 1
    uniqueItems: true
  Module: !include schema/module.json
  Modules:
    type: array
    items: Module
    minItems: 1
    uniqueItems: true


/users:
  description: Manage users.
  get:
    description: Get list of users.
    responses:
      200:
        body:
          application/json:
            schema: Users

  post:
    description: Create a user.
    body:
      type: User | Users
  /{user_id}:
    get:
      description: Get information about user {user_id}.
      responses:
        200:
          body:
            application/json:
              schema: User
    put:
      description: Modify user profile..
      body:
        application/json:
          schema: User

/courses:
  description: Manages courses.
  get:
    description: List courses.
    responses:
      200:
        body:
          application/json:
            schema: Courses
  post:
    description: Create course.
    body:
      application/json:
        schema: Course
  /{course_id}:
    get:
      description: Get course information.
      responses:
        200:
          body:
            application/json:
              schema: Course
    /modules:
      get:
        description: Get modules lists.
        responses:
          200:
            body:
              application/json:
                schema: Modules
      post:
        description: Create module.
        body:
          application/json:
            schema: Module
      /{module_id}:
        /tasks:
          get:
            description: Get list of tasks in module.
            body:
              application/json:
                schema: Module
          /{task_id}:
            get:
              description: Get task information.
            /solutions:
              get:
                description: List submitted solutions.
                post:
                  desciption: Submit a solution to the task.
              /{solution_id}:
                get:
                  description: Get info about solution.


